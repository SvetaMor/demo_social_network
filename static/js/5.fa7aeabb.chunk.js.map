{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","src","img","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToProps","mapDispatchToProps","dispatch","sendMessageCreator","AuthRedirectComponent","compose"],"mappings":"kOAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OADoCM,YAAQX,EAARW,CAAoCL,K,oBCf5EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,sFCerMC,EAVG,SAACN,GACf,IAAIO,EAAM,YAAYP,EAAMQ,GAC5B,OACI,yBAAKC,UAAWC,IAAEC,OAAQ,IAAID,IAAEE,QAC5B,yBAAKC,IAAKb,EAAMc,MAChB,kBAAC,IAAD,CAASb,GAAIM,GAAOP,EAAMe,QCAvBC,EARA,SAAChB,GACZ,OACI,yBAAKS,UAAWC,IAAEO,SACbjB,EAAMiB,U,iCCDbC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAfQ,SAACpB,GACpB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAY,CAACC,IAAUV,GACvBH,KAAM,iBAAkBc,YAAY,wBAE/C,6BACI,6CCqBDC,EA9BC,SAAC9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,YAAYC,QACnCC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,GAAIM,IAAKqB,EAAErB,SAEhEuB,EAAmBrC,EAAMgC,YAAYM,SACpCJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAE/B,GAAIS,QAASsB,EAAEtB,aAS7C,OACQ,yBAAKR,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAE8B,cACbT,GAEL,yBAAKtB,UAAWC,IAAE4B,UACd,6BACKD,GAEL,kBAAC,EAAD,CAAgBf,SAdd,SAACmB,GACfzC,EAAM0C,YAAYD,EAAOE,sB,iCCV7BC,EAAkB,SAACnD,GACnB,MAAO,CACHuC,YAAavC,EAAMuC,cAGvBa,EAAqB,SAACC,GACtB,MAAO,CACHJ,YAAa,SAACC,GAAD,OAAoBG,EAASC,YAAmBJ,OAIjEK,EAAwBpD,YAAiBkC,GAEpB3B,YAAQyC,EAAiBC,EAAzB1C,CAA6C6C,GAEvDC,sBACX9C,YAAQyC,EAAiBC,GACzBjD,IAFWqD,CAGbnB","file":"static/js/5.fa7aeabb.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render(){\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnecctAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnecctAuthRedirectComponent;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from 'react-router-dom';\n\n\n\nconst DialogItem =(props)=> {\n    let path ='/dialogs/'+props.id;\n    return(\n        <div className={s.dialog +' '+s.active}>\n            <img src={props.img} />\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message =(props)=>{\n    return (\n        <div className={s.message}>\n            {props.message}        \n        </div>\n    );\n}\n\nexport default Message;\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\nimport {required, maxLengthCreator} from '../../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate = {[required, maxLength50]}\n                       name={\"newMessageBody\"} placeholder='Enter your message' />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\n//import {reduxForm} from 'redux-form';\n\nconst Dialogs = (props) => {\n    //let dialogsPage = props.store.getState().dialogsPage;\n    let dialogsElements = props.dialogsPage.dialogs\n        .map(d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>);\n\n    let messagesElements = props.dialogsPage.messages\n        .map(m => <Message key={m.id} message={m.message}/>);\n    //let newMessageBody = props.dialogsPage.newMessageBody;\n\n\n    let addNewMessage=(values)=>{\n        props.sendMessage(values.newMessageBody);\n    };\n\n    //if (!props.isAuth) return <Redirect to={'/login'} />;\n    return (\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {dialogsElements}\n                </div>\n                <div className={s.messages}>\n                    <div>\n                        {messagesElements}\n                    </div>\n                    <AddMessageForm onSubmit={addNewMessage} />\n                </div>\n            </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport Dialogs from './Dialogs';\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\n//import StoreContext from '../../StoreContext_dell';\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    };\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\n    }\n}\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}