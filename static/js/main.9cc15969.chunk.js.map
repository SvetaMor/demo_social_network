{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/loader.gif","components/Navbar/Navbar.module.css","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/SideBar/SideBar.jsx","components/SideBar/SideBarContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/SideBar/SideBar.module.css","components/Header/Header.module.css","redux/profile-reducer.js","components/common/preloader/Preloader.jsx"],"names":["initialState","dialogs","id","name","img","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","portionSize","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","page","dispatch","a","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","UsersReducer","followed","filter","module","exports","friends","sidebarReducer","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sideBar","usersPage","usersReducer","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","classes","nav","item","to","activeClassName","active","News","Music","props","Settings","SideBar","s","side","connect","Header","header","src","loginBlock","onClick","HeaderContainer","this","React","Component","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","styles","formSummaryError","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","Preloader","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","profileThunkCreator","newPost","p","postId","preloader"],"mappings":"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","file":"static/js/main.9cc15969.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpeANnVzE_pT-gB4qbM8MNnol_ezD1a0vS_tOLXVULNxKULGzx5g'},\n        {id: 2, name: 'Andrey', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4dLBe7Sc_1IIJtWboXOqbO_h20al6fxAtbiw4Au1ZQ4GTD7t_xg'},\n        {id: 3, name: 'Valera', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTlEeD9umlTl6KHEfysX_hCAhuLAKL-WOBpJQqCXAGmhetMEcLqNA'},\n        {id: 4, name: 'Sveta', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTcpANj_2I8ZL9V1eXglRisRbrlA0Mz-PZzVRpPsW0y3TjUbYJE'},\n        {id: 5, name: 'Sasha', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJpmfj5hm9-WL1GZ8hbV9PD7Q98W6nXc8p1rt34_pTlgpA90L3'},\n        {id: 6, name: 'Viktor', img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSyO4iUhvQmVWlkxc-IBTryx4qv4lQKxv_fq1eiQ_NaEolP30mPAg'}\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your react?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'}\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) =>{\n    switch (action.type){\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;\n","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"59a7deb7-40fb-42a4-8c0b-90c264fc43d8\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage=1, pageSize=10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n            return response.data;\n        });\n    },\n    unfollow(userId){\n        return instance.delete(`follow/${userId}`)\n    },\n    follow(userId){\n        return instance.post(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('Obsolete method. Please use profileAPI object.');\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me(){\n        return instance.get('auth/me');\n    },\n    login(email, password, rememberMe=false){\n        return instance.post('auth/login', {email, password, rememberMe});\n    },\n    logout(){\n        return instance.delete('auth/login');\n    }\n}\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if(u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}\n","import {usersAPI} from '../api/api';\nimport {updateObjectInArray} from '../utils/object-helpers';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n//const GET_USERS_TUNK_CREATOR = 'GET_USERS_TUNK_CREATOR';\n\nlet initialState={\n    users: [],\n    pageSize:5,\n    portionSize:15,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\n\nconst UsersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n            return {...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            };\n        }\n        case UNFOLLOW:{\n            return {...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            };\n        }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {...state,\n                followingInProgress: action.isFetching\n                ? [...state.followingInProgress, action.userId]\n                : state.followingInProgress.filter(id=> id!=action.userId)}\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess =(userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess =(userId) => ({type: UNFOLLOW, userId});\nexport const setUsers =(users) => ({type: SET_USERS, users});\nexport const setCurrentPage =(currentPage) =>\n    ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) =>\n    ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) =>\n    ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) =>\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\nexport const getUsersThunkCreator =(page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(setCurrentPage(page));\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow =(userId) => {\n    return async (dispatch) => {\n        let apiMethod = usersAPI.follow.bind(usersAPI);\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n    }\n}\n\nexport const unfollow =(userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default UsersReducer;\n","module.exports = __webpack_public_path__ + \"static/media/loader.e811f41d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","let initialState = {\n    friends: [\n        {id: 1, name: 'Anna'},\n        {id: 2, name: 'Pavel'},\n        {id: 3, name: 'Nikita'}\n    ]\n};\n\nconst sidebarReducer = (state=initialState, action) => {\n\n    return state\n}\n\nexport default sidebarReducer;\n","import {authAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\nconst setAuthUserData = (userId, email, login, isAuth) =>\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth} })\n\nexport const getAuthUserData = () => async(dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    };\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = response.data.messages.length>0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\n\nexport default authReducer;\n","import {authAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise]).then(()=>{\n        dispatch(initializedSuccess());\n    });\n}\n\nexport default appReducer;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport appReducer from './app-reducer';\nimport usersReducer from './users-reducer';\nimport authReducer from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\n\nlet reducers=combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sideBar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n//window.store = store;\nexport default store;\n","import React from 'react';\nimport classes from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar =()=>{\n    return(\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink  to=\"/profile\" activeClassName={classes.active}>\n                Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n            </div >\n            <div className={classes.item}>\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport s from './News.module.css';\n\nconst News =()=> {\n    return (\n        <div>\n            All news\n        </div>\n    );\n}\n\nexport default News;\n","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music =(props)=>{\n    return (\n        <div>\n            My music\n        </div>\n    );\n}\n\nexport default Music;","import React from 'react';\nimport s from './Settings.module.css';\n\nconst Settings= (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\nexport default Settings; \n","import React from 'react';\nimport s from './SideBar.module.css';\nimport Friend from './Friends/Friend.jsx';\n//import StoreContext from '../../StoreContext';\n//import {connect} from 'react-redux';\n\nconst SideBar =(props) => {\n    return (<div className={s.side}>        \n                <h4>Friends</h4>\n                <div>\n                    {props.friends}\n                </div>\n            </div>);\n}\n\nexport default SideBar;\n","import React from 'react';\n//import StoreContext from '../../StoreContext';\nimport SideBar from './SideBar.jsx';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        friends: state.sideBar.friends\n    };\n};\n\nlet mapDispatchToProps =() => { return {};};\n\nconst SideBarContainer = connect(mapStateToProps)(SideBar);\n\nexport default SideBarContainer;\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Header =(props)=>{\n    return(\n        <header className={s.header}>\n            <img src='https://upload.wikimedia.org/wikipedia/commons/a/ad/Figma-1-logo.png'/>\n            <div className={s.loginBlock}>\n            {props.isAuth\n                ? (<div>{props.login} - <button onClick={props.logout}>Log out</button></div>)\n                : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport {Input} from '../common/FormsControls/FormsControls';\nimport styles from '../common/FormsControls/FormsControls.module.css';\nimport {required, maxLengthCreator} from '../../utils/validators/validators';\nimport {login,logout} from '../../redux/auth-reducer';\nimport {Redirect} from 'react-router';\nimport {createField} from '../common/FormsControls/FormsControls';\n\nconst LoginForm =({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('Email', 'email', [required], Input)}\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\n\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login =(props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React from 'react';\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>Loading...</div>}>\n            <Component {...props} />\n        </React.Suspense>\n    };\n}\n","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\n//import ProfileContainer from './components/Profile/ProfileContainer';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport News from './components/News/News';\nimport {Route, withRouter} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport SideBarContainer from './components/SideBar/SideBarContainer';\n//import UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport {compose} from 'redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/common/preloader/Preloader';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider, connect} from 'react-redux';\nimport {withSuspense} from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    };\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                {/*SideBarContainer*/}\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                            render = {withSuspense(DialogsContainer)} />\n                    <Route path='/profile/:userId?'\n                            render = {withSuspense(ProfileContainer)}  />\n                    <Route path='/users'\n                            render= {withSuspense(UsersContainer)} />\n                    <Route path='/news' render={ () => <News />} />\n                    <Route path='/music' render={ () => <Music />} />\n                    <Route path='/settings' render={ () => <Settings />} />\n                    <Route path='/login' render={ () => <Login />} />\n                </div>\n            </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL} >\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n}\n\nexport default SamuraiJSApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n//addPost('Samurai');\n//let rerenderEntireTree =(state) => {\n    ReactDOM.render(\n        <SamuraiJSApp />\n        , document.getElementById('root')\n    );\n//}\n\n//rerenderEntireTree(store.getState());\n\n//store.subscribe(rerenderEntireTree);\n","import React from 'react';\nimport styles from './FormsControls.module.css';\nimport {Field} from 'redux-form';\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl +\" \"+(hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props={}, text='') => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate = {validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length >maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side\":\"SideBar_side__3TnJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {usersAPI, profileAPI} from '../api/api';\n\nconst ADD_POST='ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST ='DELETE_POST';\n\nlet initialState={\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount:'12'},\n        {id: 2, message: 'It\\'s my first post', likesCount:'50'}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 3,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost]\n            };\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id != action.postId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type:ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\n\nexport const profileThunkCreator = (userId) => async (dispatch) =>{\n        let response = await usersAPI.getProfile(userId);\n        dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n        let response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n        let response = await profileAPI.updateStatus(status);\n        if (response.data.resultCode === 0){\n            dispatch(setStatus(status));\n        }\n}\n\nexport default profileReducer;\n","import React from 'react';\nimport preloader from '../../../assets/images/loader.gif';\n\nlet Preloader = (props) => {\n    return <div>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;\n"],"sourceRoot":""}